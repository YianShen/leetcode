/*题目：
将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。
比如输入字符串为 "LEETCODEISHIRING" 行数为 3 时，排列如下：
L   C   I   R
E T O E S I I G
E   D   H   N
*/

/*
解题思路：将所有字符按规则存储到一个二维数组
数组的维数：
  行是给定的；
  列根据规则计算：
  1. 当字串长度小于行； 
  2. 将2*numRows - 2看作一组，计算列；要考虑两种情况---1) 当剩余字符串数目小于等于numRows； 2） 当剩余字符窜你数目大于numRows
存储进数组的规则：
  当列下标为numRows-1的倍数或者0时，直接将字符串存入
  其他列，1.设置存入标志flag，每列存入一个字符，存入时flag = true; 2.设置存储的行rowFlag = numRows - 2, 每次存入后自减一，列更新时重置
  设置k = 0,遍历字符串
缺点：
  耗时耗内存
*/
class Solution {
public:
    string convert(string s, int numRows) {
        if(s.size() <= numRows || numRows == 1){
            return s;
        }
        int s_size = s.size();
        int numCols = 0;
        if(s_size < (2 * numRows - 2)){
            numCols = 1 + s_size - numRows;
        }
	    else if(s_size % (2 * numRows - 2) <= numRows){
            numCols = (s_size / (2 * numRows - 2)) * (numRows - 1) + 1;
        }
        else if(s_size % (2 * numRows - 2) > numRows){
            numCols = (s_size / (2 * numRows - 2)) * (numRows - 1) + s_size % (2 * numRows - 2) - numRows + 1;
        }
	    vector<vector<string>> dp(numCols, vector<string>(numRows));
	    int k = 0;
	    bool flag = false;
	    int rowFlag = numRows - 2;
	    for (int i = 0; i < numCols; i++) {
		    flag = false;                    //每列重置
		    if (i % (numRows - 1) == 0) {
			    rowFlag = numRows - 2;       //按规律重置
		    }
		    for (int j = 0; j < numRows; j++) {
			    if (i == 0 || i % (numRows - 1) == 0 && k < s_size) {
				    dp[i][j] = s[k];
				    k++;
			    }
			    else if (flag == false && j == rowFlag && k < s_size) {
				    dp[i][j] = s[k];
                    flag = true;
                    rowFlag--;
                    k++;
			    }
                else {
                    dp[i][j] = "";
                }
		    }
	    }
        string str = "";
	    for (int i = 0; i < numRows; ++i) {
		    for (int j = 0; j < numCols; ++j) {
			    str += dp[j][i];
		    }
	    }
	    return str;
    }
};
