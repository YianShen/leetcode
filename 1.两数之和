/*
给定一个整数数组nums和目标值target，在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。
*/

/* 暴力解法：
外循环-> 从第一个元素开始      内循环-> 从外循环的后一个元素开始
将外循环与内循环元素相加，依次遍历所有组合
*/
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int i, j;
        vector<int> vec;
        for(i = 0; i < nums.size(); i++){
            for(j = i + 1; j < nums.size(); j++){
                if(nums[i] + nums[j] == target){
                    vec.push_back(i);
                    vec.push_back(j);
                }
            }
        }
        return vec;
    }
};
